<?php

/**
 * DummyDatasource
 * @author	Amaury Bouchard <amaury@amaury.net>
 * @copyright	© 2012-2019, Amaury Bouchard
 */

namespace Temma\Base;

use \Temma\Base\Log as TµLog;

/**
 * Object use to create a data source that does nothing.
 */
class DummyDatasource extends \Temma\Base\Datasource {
	/**
	 * Factory.
	 * @param	string	$dsn	Parameter string (not used).
	 * @return	\Temma\Base\DummyDatasource	The created object.
	 */
	static public function factory(string $dsn) : \Temma\Base\Datasource {
		TµLog::log('Temma/Base', 'DEBUG', "Creation of a dummy datasource.");
		return (new self());
	}
	/**
	 * Any method called on this object will work.
	 * @param	string	$name	Name of the called method.
	 * @param	array	$args	List of parameters.
	 * @return	null	This method always returns null.
	 */
	public function __call(string $name, array $args) {
		TµLog::log('Temma/Base', 'DEBUG', "Dummy datasource called on method '$name'.");
		return (null);
	}
	/**
	 * Getter. Returns the data generated by the anonymous function given as parameter.
	 * @param	string		$key		Index key of the data.
	 * @param	?callable	$callback	(optional) Anonymous function that will be called.
	 *						Its return value will be returned by the method.
	 * @return	mixed	The data returned by the anonymous function, or null.
	 */
	public function get(string $key, ?callable $callback=null) {
		TµLog::log('Temma/Base', 'DEBUG', "Dummy datasource get() call.");
		if (is_callable($callback))
			return ($callback());
		return (null);
	}
}

